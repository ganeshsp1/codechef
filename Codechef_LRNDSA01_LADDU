/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
    static PrintWriter out=new PrintWriter((System.out));
    public static void main(String args[])throws IOException
    {
        Reader sc=new Reader();
        int t=sc.nextInt();
        while(t-->0)
        {
        	 int g=sc.nextInt();
        	 String nation = sc.next();
        	 int laddus = 0;
        	while(g-->0)
            {
        		String activity = sc.next();
        		switch (activity) {
        		
				case "CONTEST_WON":
					laddus += 300;
					int rank  = sc.nextInt();
					if(rank<20)
						laddus += (20-rank);
					break;
					
				case "TOP_CONTRIBUTOR":
					laddus += 300;					
					break;
					
				case "BUG_FOUND":
					int severity  = sc.nextInt();
					laddus += severity;			
					break;
					
				case "CONTEST_HOSTED":
					laddus += 50;	
					break;

				default:
					break;
				}
            }
        	if(nation.equals("INDIAN")) {
        		out.println(laddus/200);
        	}
        	else{
        		out.println(laddus/400);
        	}
        }
	out.close();
    }
    
    static long solve(int i, long n, int q) {
    	if(i==q||n%2==0) {
    		return n/2;
    	}
    	else {
    		return (n/2)+1;    		
    	}
    }

	static class Reader 
    { 
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st=new StringTokenizer("");
        public String next()
        {
            while(!st.hasMoreTokens())
            {
                try
                {
                    st=new StringTokenizer(br.readLine());
                }
                catch(Exception e)
                {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }
        public int nextInt()
        {
            return Integer.parseInt(next());
        }
        public long nextLong()
        {
            return Long.parseLong(next());
        }
        public double nextDouble()
        {
            return Double.parseDouble(next());
        }
        public String nextLine()
        {
            try
            {
                return br.readLine();
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
            return null;
        }
        public boolean hasNext()
        {
            String next=null;
            try
            {
                next=br.readLine();
            }
            catch(Exception e)
            {
            }
            if(next==null)
            {
                return false;
            }
            st=new StringTokenizer(next);
            return true;
        }
    } 
}
